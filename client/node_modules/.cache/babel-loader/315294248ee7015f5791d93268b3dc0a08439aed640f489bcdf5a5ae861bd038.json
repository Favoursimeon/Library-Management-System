{"ast":null,"code":"import { Children, cloneElement } from \"react\";\nimport { isTabPanel, isTab, isTabList } from \"./elementTypes\";\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\nexport function deepMap(children, callback) {\n  return Children.map(children, child => {\n    if (child === null) return null;\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n    if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      return cloneElement(child, {\n        ...child.props,\n        children: deepMap(child.props.children, callback)\n      });\n    }\n    return child;\n  });\n}\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, child => {\n    if (child === null) return;\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === \"object\") {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}","map":{"version":3,"names":["Children","cloneElement","isTabPanel","isTab","isTabList","isTabChild","child","deepMap","children","callback","map","props","deepForEach","forEach"],"sources":["/home/favour/Library-Management-System/client/node_modules/react-tabs/esm/helpers/childrenDeepMap.js"],"sourcesContent":["import{Children,cloneElement}from\"react\";import{isTabPanel,isTab,isTabList}from\"./elementTypes\";function isTabChild(child){return isTab(child)||isTabList(child)||isTabPanel(child)}export function deepMap(children,callback){return Children.map(children,child=>{if(child===null)return null;if(isTabChild(child)){return callback(child)}if(child.props&&child.props.children&&typeof child.props.children===\"object\"){return cloneElement(child,{...child.props,children:deepMap(child.props.children,callback)})}return child})}export function deepForEach(children,callback){return Children.forEach(children,child=>{if(child===null)return;if(isTab(child)||isTabPanel(child)){callback(child)}else if(child.props&&child.props.children&&typeof child.props.children===\"object\"){if(isTabList(child))callback(child);deepForEach(child.props.children,callback)}})}"],"mappings":"AAAA,SAAOA,QAAQ,EAACC,YAAY,QAAK,OAAO;AAAC,SAAOC,UAAU,EAACC,KAAK,EAACC,SAAS,QAAK,gBAAgB;AAAC,SAASC,UAAUA,CAACC,KAAK,EAAC;EAAC,OAAOH,KAAK,CAACG,KAAK,CAAC,IAAEF,SAAS,CAACE,KAAK,CAAC,IAAEJ,UAAU,CAACI,KAAK,CAAC;AAAA;AAAC,OAAO,SAASC,OAAOA,CAACC,QAAQ,EAACC,QAAQ,EAAC;EAAC,OAAOT,QAAQ,CAACU,GAAG,CAACF,QAAQ,EAACF,KAAK,IAAE;IAAC,IAAGA,KAAK,KAAG,IAAI,EAAC,OAAO,IAAI;IAAC,IAAGD,UAAU,CAACC,KAAK,CAAC,EAAC;MAAC,OAAOG,QAAQ,CAACH,KAAK,CAAC;IAAA;IAAC,IAAGA,KAAK,CAACK,KAAK,IAAEL,KAAK,CAACK,KAAK,CAACH,QAAQ,IAAE,OAAOF,KAAK,CAACK,KAAK,CAACH,QAAQ,KAAG,QAAQ,EAAC;MAAC,OAAOP,YAAY,CAACK,KAAK,EAAC;QAAC,GAAGA,KAAK,CAACK,KAAK;QAACH,QAAQ,EAACD,OAAO,CAACD,KAAK,CAACK,KAAK,CAACH,QAAQ,EAACC,QAAQ;MAAC,CAAC,CAAC;IAAA;IAAC,OAAOH,KAAK;EAAA,CAAC,CAAC;AAAA;AAAC,OAAO,SAASM,WAAWA,CAACJ,QAAQ,EAACC,QAAQ,EAAC;EAAC,OAAOT,QAAQ,CAACa,OAAO,CAACL,QAAQ,EAACF,KAAK,IAAE;IAAC,IAAGA,KAAK,KAAG,IAAI,EAAC;IAAO,IAAGH,KAAK,CAACG,KAAK,CAAC,IAAEJ,UAAU,CAACI,KAAK,CAAC,EAAC;MAACG,QAAQ,CAACH,KAAK,CAAC;IAAA,CAAC,MAAK,IAAGA,KAAK,CAACK,KAAK,IAAEL,KAAK,CAACK,KAAK,CAACH,QAAQ,IAAE,OAAOF,KAAK,CAACK,KAAK,CAACH,QAAQ,KAAG,QAAQ,EAAC;MAAC,IAAGJ,SAAS,CAACE,KAAK,CAAC,EAACG,QAAQ,CAACH,KAAK,CAAC;MAACM,WAAW,CAACN,KAAK,CAACK,KAAK,CAACH,QAAQ,EAACC,QAAQ,CAAC;IAAA;EAAC,CAAC,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}