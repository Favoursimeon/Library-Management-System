{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nfunction UnitNumber(_ref) {\n  let {\n    prefixCls,\n    value,\n    current,\n    offset = 0\n  } = _ref;\n  let style;\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: `${offset}00%`,\n      left: 0\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: style,\n    className: classNames(`${prefixCls}-only-unit`, {\n      current\n    })\n  }, value);\n}\nfunction getOffset(start, end, unit) {\n  let index = start;\n  let offset = 0;\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n  return offset;\n}\nexport default function SingleNumber(props) {\n  const {\n    prefixCls,\n    count: originCount,\n    value: originValue\n  } = props;\n  const value = Number(originValue);\n  const count = Math.abs(originCount);\n  const [prevValue, setPrevValue] = React.useState(value);\n  const [prevCount, setPrevCount] = React.useState(count);\n  // ============================= Events =============================\n  const onTransitionEnd = () => {\n    setPrevValue(value);\n    setPrevCount(count);\n  };\n  // Fallback if transition events are not supported\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      onTransitionEnd();\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n  // ============================= Render =============================\n  // Render unit list\n  let unitNodes;\n  let offsetStyle;\n  if (prevValue === value || Number.isNaN(value) || Number.isNaN(prevValue)) {\n    // Nothing to change\n    unitNodes = [/*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n      key: value,\n      current: true\n    }))];\n    offsetStyle = {\n      transition: 'none'\n    };\n  } else {\n    unitNodes = [];\n    // Fill basic number units\n    const end = value + 10;\n    const unitNumberList = [];\n    for (let index = value; index <= end; index += 1) {\n      unitNumberList.push(index);\n    }\n    // Fill with number unit nodes\n    const prevIndex = unitNumberList.findIndex(n => n % 10 === prevValue);\n    unitNodes = unitNumberList.map((n, index) => {\n      const singleUnit = n % 10;\n      return /*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n        key: n,\n        value: singleUnit,\n        offset: index - prevIndex,\n        current: index === prevIndex\n      }));\n    });\n    // Calculate container offset value\n    const unit = prevCount < count ? 1 : -1;\n    offsetStyle = {\n      transform: `translateY(${-getOffset(prevValue, value, unit)}00%)`\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-only`,\n    style: offsetStyle,\n    onTransitionEnd: onTransitionEnd\n  }, unitNodes);\n}","map":{"version":3,"names":["React","classNames","UnitNumber","_ref","prefixCls","value","current","offset","style","position","top","left","createElement","className","getOffset","start","end","unit","index","SingleNumber","props","count","originCount","originValue","Number","Math","abs","prevValue","setPrevValue","useState","prevCount","setPrevCount","onTransitionEnd","useEffect","timeout","setTimeout","clearTimeout","unitNodes","offsetStyle","isNaN","Object","assign","key","transition","unitNumberList","push","prevIndex","findIndex","n","map","singleUnit","transform"],"sources":["/home/favour/Library-Management-System/client/node_modules/antd/es/badge/SingleNumber.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nfunction UnitNumber(_ref) {\n  let {\n    prefixCls,\n    value,\n    current,\n    offset = 0\n  } = _ref;\n  let style;\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: `${offset}00%`,\n      left: 0\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: style,\n    className: classNames(`${prefixCls}-only-unit`, {\n      current\n    })\n  }, value);\n}\nfunction getOffset(start, end, unit) {\n  let index = start;\n  let offset = 0;\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n  return offset;\n}\nexport default function SingleNumber(props) {\n  const {\n    prefixCls,\n    count: originCount,\n    value: originValue\n  } = props;\n  const value = Number(originValue);\n  const count = Math.abs(originCount);\n  const [prevValue, setPrevValue] = React.useState(value);\n  const [prevCount, setPrevCount] = React.useState(count);\n  // ============================= Events =============================\n  const onTransitionEnd = () => {\n    setPrevValue(value);\n    setPrevCount(count);\n  };\n  // Fallback if transition events are not supported\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      onTransitionEnd();\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n  // ============================= Render =============================\n  // Render unit list\n  let unitNodes;\n  let offsetStyle;\n  if (prevValue === value || Number.isNaN(value) || Number.isNaN(prevValue)) {\n    // Nothing to change\n    unitNodes = [/*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n      key: value,\n      current: true\n    }))];\n    offsetStyle = {\n      transition: 'none'\n    };\n  } else {\n    unitNodes = [];\n    // Fill basic number units\n    const end = value + 10;\n    const unitNumberList = [];\n    for (let index = value; index <= end; index += 1) {\n      unitNumberList.push(index);\n    }\n    // Fill with number unit nodes\n    const prevIndex = unitNumberList.findIndex(n => n % 10 === prevValue);\n    unitNodes = unitNumberList.map((n, index) => {\n      const singleUnit = n % 10;\n      return /*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n        key: n,\n        value: singleUnit,\n        offset: index - prevIndex,\n        current: index === prevIndex\n      }));\n    });\n    // Calculate container offset value\n    const unit = prevCount < count ? 1 : -1;\n    offsetStyle = {\n      transform: `translateY(${-getOffset(prevValue, value, unit)}00%)`\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-only`,\n    style: offsetStyle,\n    onTransitionEnd: onTransitionEnd\n  }, unitNodes);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}