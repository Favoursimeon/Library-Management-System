{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"label\", \"children\", \"key\", \"type\"];\nimport * as React from 'react';\nimport Divider from \"../Divider\";\nimport MenuItem from \"../MenuItem\";\nimport MenuItemGroup from \"../MenuItemGroup\";\nimport SubMenu from \"../SubMenu\";\nimport { parseChildren } from \"./commonUtil\";\nfunction convertItemsToNodes(list, components) {\n  var MergedMenuItem = components.item,\n    MergedMenuItemGroup = components.group,\n    MergedSubMenu = components.submenu,\n    MergedDivider = components.divider;\n  return (list || []).map(function (opt, index) {\n    if (opt && _typeof(opt) === 'object') {\n      var _ref = opt,\n        label = _ref.label,\n        children = _ref.children,\n        key = _ref.key,\n        type = _ref.type,\n        restProps = _objectWithoutProperties(_ref, _excluded);\n      var mergedKey = key !== null && key !== void 0 ? key : \"tmp-\".concat(index);\n\n      // MenuItemGroup & SubMenuItem\n      if (children || type === 'group') {\n        if (type === 'group') {\n          // Group\n          return /*#__PURE__*/React.createElement(MergedMenuItemGroup, _extends({\n            key: mergedKey\n          }, restProps, {\n            title: label\n          }), convertItemsToNodes(children, components));\n        }\n\n        // Sub Menu\n        return /*#__PURE__*/React.createElement(MergedSubMenu, _extends({\n          key: mergedKey\n        }, restProps, {\n          title: label\n        }), convertItemsToNodes(children, components));\n      }\n\n      // MenuItem & Divider\n      if (type === 'divider') {\n        return /*#__PURE__*/React.createElement(MergedDivider, _extends({\n          key: mergedKey\n        }, restProps));\n      }\n      return /*#__PURE__*/React.createElement(MergedMenuItem, _extends({\n        key: mergedKey\n      }, restProps), label);\n    }\n    return null;\n  }).filter(function (opt) {\n    return opt;\n  });\n}\nexport function parseItems(children, items, keyPath, components) {\n  var childNodes = children;\n  var mergedComponents = _objectSpread({\n    divider: Divider,\n    item: MenuItem,\n    group: MenuItemGroup,\n    submenu: SubMenu\n  }, components);\n  if (items) {\n    childNodes = convertItemsToNodes(items, mergedComponents);\n  }\n  return parseChildren(childNodes, keyPath);\n}","map":{"version":3,"names":["_objectSpread","_extends","_objectWithoutProperties","_typeof","_excluded","React","Divider","MenuItem","MenuItemGroup","SubMenu","parseChildren","convertItemsToNodes","list","components","MergedMenuItem","item","MergedMenuItemGroup","group","MergedSubMenu","submenu","MergedDivider","divider","map","opt","index","_ref","label","children","key","type","restProps","mergedKey","concat","createElement","title","filter","parseItems","items","keyPath","childNodes","mergedComponents"],"sources":["/home/favour/Library-Management-System/client/node_modules/rc-menu/es/utils/nodeUtil.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nvar _excluded = [\"label\", \"children\", \"key\", \"type\"];\nimport * as React from 'react';\nimport Divider from \"../Divider\";\nimport MenuItem from \"../MenuItem\";\nimport MenuItemGroup from \"../MenuItemGroup\";\nimport SubMenu from \"../SubMenu\";\nimport { parseChildren } from \"./commonUtil\";\nfunction convertItemsToNodes(list, components) {\n  var MergedMenuItem = components.item,\n    MergedMenuItemGroup = components.group,\n    MergedSubMenu = components.submenu,\n    MergedDivider = components.divider;\n  return (list || []).map(function (opt, index) {\n    if (opt && _typeof(opt) === 'object') {\n      var _ref = opt,\n        label = _ref.label,\n        children = _ref.children,\n        key = _ref.key,\n        type = _ref.type,\n        restProps = _objectWithoutProperties(_ref, _excluded);\n      var mergedKey = key !== null && key !== void 0 ? key : \"tmp-\".concat(index);\n\n      // MenuItemGroup & SubMenuItem\n      if (children || type === 'group') {\n        if (type === 'group') {\n          // Group\n          return /*#__PURE__*/React.createElement(MergedMenuItemGroup, _extends({\n            key: mergedKey\n          }, restProps, {\n            title: label\n          }), convertItemsToNodes(children, components));\n        }\n\n        // Sub Menu\n        return /*#__PURE__*/React.createElement(MergedSubMenu, _extends({\n          key: mergedKey\n        }, restProps, {\n          title: label\n        }), convertItemsToNodes(children, components));\n      }\n\n      // MenuItem & Divider\n      if (type === 'divider') {\n        return /*#__PURE__*/React.createElement(MergedDivider, _extends({\n          key: mergedKey\n        }, restProps));\n      }\n      return /*#__PURE__*/React.createElement(MergedMenuItem, _extends({\n        key: mergedKey\n      }, restProps), label);\n    }\n    return null;\n  }).filter(function (opt) {\n    return opt;\n  });\n}\nexport function parseItems(children, items, keyPath, components) {\n  var childNodes = children;\n  var mergedComponents = _objectSpread({\n    divider: Divider,\n    item: MenuItem,\n    group: MenuItemGroup,\n    submenu: SubMenu\n  }, components);\n  if (items) {\n    childNodes = convertItemsToNodes(items, mergedComponents);\n  }\n  return parseChildren(childNodes, keyPath);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}