{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport raf from \"rc-util/es/raf\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport Tooltip from '../tooltip';\nconst SliderTooltip = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    open\n  } = props;\n  const innerRef = useRef(null);\n  const rafRef = useRef(null);\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n  function keepAlign() {\n    rafRef.current = raf(() => {\n      var _a;\n      (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n      rafRef.current = null;\n    });\n  }\n  React.useEffect(() => {\n    if (open) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n    return cancelKeepAlign;\n  }, [open, props.title]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    ref: composeRef(innerRef, ref)\n  }, props));\n});\nif (process.env.NODE_ENV !== 'production') {\n  SliderTooltip.displayName = 'SliderTooltip';\n}\nexport default SliderTooltip;","map":{"version":3,"names":["React","useRef","raf","composeRef","Tooltip","SliderTooltip","forwardRef","props","ref","open","innerRef","rafRef","cancelKeepAlign","cancel","current","keepAlign","_a","forceAlign","useEffect","title","createElement","Object","assign","process","env","NODE_ENV","displayName"],"sources":["/home/favour/Library-Management-System/client/node_modules/antd/es/slider/SliderTooltip.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport raf from \"rc-util/es/raf\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport Tooltip from '../tooltip';\nconst SliderTooltip = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    open\n  } = props;\n  const innerRef = useRef(null);\n  const rafRef = useRef(null);\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n  function keepAlign() {\n    rafRef.current = raf(() => {\n      var _a;\n      (_a = innerRef.current) === null || _a === void 0 ? void 0 : _a.forceAlign();\n      rafRef.current = null;\n    });\n  }\n  React.useEffect(() => {\n    if (open) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n    return cancelKeepAlign;\n  }, [open, props.title]);\n  return /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    ref: composeRef(innerRef, ref)\n  }, props));\n});\nif (process.env.NODE_ENV !== 'production') {\n  SliderTooltip.displayName = 'SliderTooltip';\n}\nexport default SliderTooltip;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,OAAO;AAC9B,OAAOC,GAAG,MAAM,gBAAgB;AAChC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,OAAO,MAAM,YAAY;AAChC,MAAMC,aAAa,GAAG,aAAaL,KAAK,CAACM,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAClE,MAAM;IACJC;EACF,CAAC,GAAGF,KAAK;EACT,MAAMG,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC3B,SAASW,eAAeA,CAAA,EAAG;IACzBV,GAAG,CAACW,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IAC1BH,MAAM,CAACG,OAAO,GAAG,IAAI;EACvB;EACA,SAASC,SAASA,CAAA,EAAG;IACnBJ,MAAM,CAACG,OAAO,GAAGZ,GAAG,CAAC,MAAM;MACzB,IAAIc,EAAE;MACN,CAACA,EAAE,GAAGN,QAAQ,CAACI,OAAO,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,UAAU,CAAC,CAAC;MAC5EN,MAAM,CAACG,OAAO,GAAG,IAAI;IACvB,CAAC,CAAC;EACJ;EACAd,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,IAAIT,IAAI,EAAE;MACRM,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLH,eAAe,CAAC,CAAC;IACnB;IACA,OAAOA,eAAe;EACxB,CAAC,EAAE,CAACH,IAAI,EAAEF,KAAK,CAACY,KAAK,CAAC,CAAC;EACvB,OAAO,aAAanB,KAAK,CAACoB,aAAa,CAAChB,OAAO,EAAEiB,MAAM,CAACC,MAAM,CAAC;IAC7Dd,GAAG,EAAEL,UAAU,CAACO,QAAQ,EAAEF,GAAG;EAC/B,CAAC,EAAED,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AACF,IAAIgB,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCpB,aAAa,CAACqB,WAAW,GAAG,eAAe;AAC7C;AACA,eAAerB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}