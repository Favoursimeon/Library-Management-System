{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React, { useEffect, useRef } from \"react\";\nimport cx from \"clsx\";\nconst DEFAULT_CLASS = \"react-tabs__tab\";\nconst defaultProps = {\n  className: DEFAULT_CLASS,\n  disabledClassName: `${DEFAULT_CLASS}--disabled`,\n  focus: false,\n  id: null,\n  selected: false,\n  selectedClassName: `${DEFAULT_CLASS}--selected`\n};\nconst propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  disabled: PropTypes.bool,\n  disabledClassName: PropTypes.string,\n  focus: PropTypes.bool,\n  id: PropTypes.string,\n  selected: PropTypes.bool,\n  selectedClassName: PropTypes.string,\n  tabIndex: PropTypes.string,\n  tabRef: PropTypes.func\n} : {};\nconst Tab = props => {\n  let nodeRef = useRef();\n  const {\n    children,\n    className,\n    disabled,\n    disabledClassName,\n    focus,\n    id,\n    selected,\n    selectedClassName,\n    tabIndex,\n    tabRef,\n    ...attributes\n  } = {\n    ...defaultProps,\n    ...props\n  };\n  useEffect(() => {\n    if (selected && focus) {\n      nodeRef.current.focus();\n    }\n  }, [selected, focus]);\n  return React.createElement(\"li\", Object.assign({}, attributes, {\n    className: cx(className, {\n      [selectedClassName]: selected,\n      [disabledClassName]: disabled\n    }),\n    ref: node => {\n      nodeRef.current = node;\n      if (tabRef) tabRef(node);\n    },\n    role: \"tab\",\n    id: `tab${id}`,\n    \"aria-selected\": selected ? \"true\" : \"false\",\n    \"aria-disabled\": disabled ? \"true\" : \"false\",\n    \"aria-controls\": `panel${id}`,\n    tabIndex: tabIndex || (selected ? \"0\" : null),\n    \"data-rttab\": true\n  }), children);\n};\nTab.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTab.tabsRole = \"Tab\";\nexport default Tab;","map":{"version":3,"names":["PropTypes","React","useEffect","useRef","cx","DEFAULT_CLASS","defaultProps","className","disabledClassName","focus","id","selected","selectedClassName","propTypes","process","env","NODE_ENV","children","oneOfType","array","object","string","disabled","bool","tabIndex","tabRef","func","Tab","props","nodeRef","attributes","current","createElement","Object","assign","ref","node","role","tabsRole"],"sources":["/home/favour/Library-Management-System/client/node_modules/react-tabs/esm/components/Tab.js"],"sourcesContent":["import PropTypes from\"prop-types\";import React,{useEffect,useRef}from\"react\";import cx from\"clsx\";const DEFAULT_CLASS=\"react-tabs__tab\";const defaultProps={className:DEFAULT_CLASS,disabledClassName:`${DEFAULT_CLASS}--disabled`,focus:false,id:null,selected:false,selectedClassName:`${DEFAULT_CLASS}--selected`};const propTypes=process.env.NODE_ENV!==\"production\"?{children:PropTypes.oneOfType([PropTypes.array,PropTypes.object,PropTypes.string]),className:PropTypes.oneOfType([PropTypes.string,PropTypes.array,PropTypes.object]),disabled:PropTypes.bool,disabledClassName:PropTypes.string,focus:PropTypes.bool,id:PropTypes.string,selected:PropTypes.bool,selectedClassName:PropTypes.string,tabIndex:PropTypes.string,tabRef:PropTypes.func}:{};const Tab=props=>{let nodeRef=useRef();const{children,className,disabled,disabledClassName,focus,id,selected,selectedClassName,tabIndex,tabRef,...attributes}={...defaultProps,...props};useEffect(()=>{if(selected&&focus){nodeRef.current.focus()}},[selected,focus]);return React.createElement(\"li\",Object.assign({},attributes,{className:cx(className,{[selectedClassName]:selected,[disabledClassName]:disabled}),ref:node=>{nodeRef.current=node;if(tabRef)tabRef(node)},role:\"tab\",id:`tab${id}`,\"aria-selected\":selected?\"true\":\"false\",\"aria-disabled\":disabled?\"true\":\"false\",\"aria-controls\":`panel${id}`,tabIndex:tabIndex||(selected?\"0\":null),\"data-rttab\":true}),children)};Tab.propTypes=process.env.NODE_ENV!==\"production\"?propTypes:{};Tab.tabsRole=\"Tab\";export default Tab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}