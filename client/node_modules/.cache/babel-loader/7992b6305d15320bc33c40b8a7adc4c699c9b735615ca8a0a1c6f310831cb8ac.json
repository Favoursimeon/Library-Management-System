{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nexport default function Progress(_ref) {\n  let {\n    percent,\n    prefixCls\n  } = _ref;\n  const dotClassName = `${prefixCls}-dot`;\n  const holderClassName = `${dotClassName}-holder`;\n  const hideClassName = `${holderClassName}-hidden`;\n  const [render, setRender] = React.useState(false);\n  // ==================== Visible =====================\n  useLayoutEffect(() => {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]);\n  // ==================== Progress ====================\n  const safePtg = Math.max(Math.min(percent, 100), 0);\n  const viewSize = 100;\n  const borderWidth = viewSize / 5;\n  const radius = viewSize / 2 - borderWidth / 2;\n  const circumference = radius * 2 * Math.PI;\n  const renderCircle = (circleClassName, style) => ( /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(circleClassName, `${dotClassName}-circle`),\n    r: radius,\n    cx: \"50\",\n    cy: \"50\",\n    strokeWidth: borderWidth,\n    style: style\n  }));\n  // ===================== Render =====================\n  if (!render) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, `${dotClassName}-progress`, safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${viewSize} ${viewSize}`,\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, renderCircle(`${dotClassName}-circle-bg`), renderCircle('', {\n    strokeDasharray: `${circumference * safePtg / 100} ${circumference * (100 - safePtg) / 100}`,\n    strokeDashoffset: `${circumference / 4}`\n  })));\n}","map":{"version":3,"names":["React","classNames","useLayoutEffect","Progress","_ref","percent","prefixCls","dotClassName","holderClassName","hideClassName","render","setRender","useState","safePtg","Math","max","min","viewSize","borderWidth","radius","circumference","PI","renderCircle","circleClassName","style","createElement","className","r","cx","cy","strokeWidth","viewBox","role","strokeDasharray","strokeDashoffset"],"sources":["/home/favour/Library-Management-System/client/node_modules/antd/es/spin/Indicator/Progress.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nexport default function Progress(_ref) {\n  let {\n    percent,\n    prefixCls\n  } = _ref;\n  const dotClassName = `${prefixCls}-dot`;\n  const holderClassName = `${dotClassName}-holder`;\n  const hideClassName = `${holderClassName}-hidden`;\n  const [render, setRender] = React.useState(false);\n  // ==================== Visible =====================\n  useLayoutEffect(() => {\n    if (percent !== 0) {\n      setRender(true);\n    }\n  }, [percent !== 0]);\n  // ==================== Progress ====================\n  const safePtg = Math.max(Math.min(percent, 100), 0);\n  const viewSize = 100;\n  const borderWidth = viewSize / 5;\n  const radius = viewSize / 2 - borderWidth / 2;\n  const circumference = radius * 2 * Math.PI;\n  const renderCircle = (circleClassName, style) => ( /*#__PURE__*/React.createElement(\"circle\", {\n    className: classNames(circleClassName, `${dotClassName}-circle`),\n    r: radius,\n    cx: \"50\",\n    cy: \"50\",\n    strokeWidth: borderWidth,\n    style: style\n  }));\n  // ===================== Render =====================\n  if (!render) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames(holderClassName, `${dotClassName}-progress`, safePtg <= 0 && hideClassName)\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: `0 0 ${viewSize} ${viewSize}`,\n    // biome-ignore lint/a11y/noNoninteractiveElementToInteractiveRole: progressbar could be readonly\n    role: \"progressbar\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": safePtg\n  }, renderCircle(`${dotClassName}-circle-bg`), renderCircle('', {\n    strokeDasharray: `${circumference * safePtg / 100} ${circumference * (100 - safePtg) / 100}`,\n    strokeDashoffset: `${circumference / 4}`\n  })));\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EACrC,IAAI;IACFC,OAAO;IACPC;EACF,CAAC,GAAGF,IAAI;EACR,MAAMG,YAAY,GAAG,GAAGD,SAAS,MAAM;EACvC,MAAME,eAAe,GAAG,GAAGD,YAAY,SAAS;EAChD,MAAME,aAAa,GAAG,GAAGD,eAAe,SAAS;EACjD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;EACjD;EACAV,eAAe,CAAC,MAAM;IACpB,IAAIG,OAAO,KAAK,CAAC,EAAE;MACjBM,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC,EAAE,CAACN,OAAO,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,MAAMQ,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACX,OAAO,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EACnD,MAAMY,QAAQ,GAAG,GAAG;EACpB,MAAMC,WAAW,GAAGD,QAAQ,GAAG,CAAC;EAChC,MAAME,MAAM,GAAGF,QAAQ,GAAG,CAAC,GAAGC,WAAW,GAAG,CAAC;EAC7C,MAAME,aAAa,GAAGD,MAAM,GAAG,CAAC,GAAGL,IAAI,CAACO,EAAE;EAC1C,MAAMC,YAAY,GAAGA,CAACC,eAAe,EAAEC,KAAK,OAAO,aAAaxB,KAAK,CAACyB,aAAa,CAAC,QAAQ,EAAE;IAC5FC,SAAS,EAAEzB,UAAU,CAACsB,eAAe,EAAE,GAAGhB,YAAY,SAAS,CAAC;IAChEoB,CAAC,EAAER,MAAM;IACTS,EAAE,EAAE,IAAI;IACRC,EAAE,EAAE,IAAI;IACRC,WAAW,EAAEZ,WAAW;IACxBM,KAAK,EAAEA;EACT,CAAC,CAAC,CAAC;EACH;EACA,IAAI,CAACd,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EACA,OAAO,aAAaV,KAAK,CAACyB,aAAa,CAAC,MAAM,EAAE;IAC9CC,SAAS,EAAEzB,UAAU,CAACO,eAAe,EAAE,GAAGD,YAAY,WAAW,EAAEM,OAAO,IAAI,CAAC,IAAIJ,aAAa;EAClG,CAAC,EAAE,aAAaT,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;IACzCM,OAAO,EAAE,OAAOd,QAAQ,IAAIA,QAAQ,EAAE;IACtC;IACAe,IAAI,EAAE,aAAa;IACnB,eAAe,EAAE,CAAC;IAClB,eAAe,EAAE,GAAG;IACpB,eAAe,EAAEnB;EACnB,CAAC,EAAES,YAAY,CAAC,GAAGf,YAAY,YAAY,CAAC,EAAEe,YAAY,CAAC,EAAE,EAAE;IAC7DW,eAAe,EAAE,GAAGb,aAAa,GAAGP,OAAO,GAAG,GAAG,IAAIO,aAAa,IAAI,GAAG,GAAGP,OAAO,CAAC,GAAG,GAAG,EAAE;IAC5FqB,gBAAgB,EAAE,GAAGd,aAAa,GAAG,CAAC;EACxC,CAAC,CAAC,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}