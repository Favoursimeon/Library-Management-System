{"ast":null,"code":"\"use client\";\n\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport TransButton from '../../_util/transButton';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nconst CopyBtn = props => {\n  const {\n    prefixCls,\n    copied,\n    locale,\n    iconOnly,\n    tooltips,\n    icon,\n    loading: btnLoading,\n    tabIndex,\n    onCopy\n  } = props;\n  const tooltipNodes = toList(tooltips);\n  const iconNodes = toList(icon);\n  const {\n    copied: copiedText,\n    copy: copyText\n  } = locale !== null && locale !== void 0 ? locale : {};\n  const copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\n  const systemStr = copied ? copiedText : copyText;\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"copy\",\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(TransButton, {\n    className: classNames(`${prefixCls}-copy`, {\n      [`${prefixCls}-copy-success`]: copied,\n      [`${prefixCls}-copy-icon-only`]: iconOnly\n    }),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel,\n    tabIndex: tabIndex\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], btnLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n};\nexport default CopyBtn;","map":{"version":3,"names":["React","CheckOutlined","CopyOutlined","LoadingOutlined","classNames","TransButton","Tooltip","getNode","toList","CopyBtn","props","prefixCls","copied","locale","iconOnly","tooltips","icon","loading","btnLoading","tabIndex","onCopy","tooltipNodes","iconNodes","copiedText","copy","copyText","copyTitle","systemStr","ariaLabel","createElement","key","title","className","onClick"],"sources":["/home/favour/Library-Management-System/client/node_modules/antd/es/typography/Base/CopyBtn.js"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport TransButton from '../../_util/transButton';\nimport Tooltip from '../../tooltip';\nimport { getNode, toList } from './util';\nconst CopyBtn = props => {\n  const {\n    prefixCls,\n    copied,\n    locale,\n    iconOnly,\n    tooltips,\n    icon,\n    loading: btnLoading,\n    tabIndex,\n    onCopy\n  } = props;\n  const tooltipNodes = toList(tooltips);\n  const iconNodes = toList(icon);\n  const {\n    copied: copiedText,\n    copy: copyText\n  } = locale !== null && locale !== void 0 ? locale : {};\n  const copyTitle = copied ? getNode(tooltipNodes[1], copiedText) : getNode(tooltipNodes[0], copyText);\n  const systemStr = copied ? copiedText : copyText;\n  const ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    key: \"copy\",\n    title: copyTitle\n  }, /*#__PURE__*/React.createElement(TransButton, {\n    className: classNames(`${prefixCls}-copy`, {\n      [`${prefixCls}-copy-success`]: copied,\n      [`${prefixCls}-copy-icon-only`]: iconOnly\n    }),\n    onClick: onCopy,\n    \"aria-label\": ariaLabel,\n    tabIndex: tabIndex\n  }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], btnLoading ? /*#__PURE__*/React.createElement(LoadingOutlined, null) : /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n};\nexport default CopyBtn;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,YAAY,MAAM,yCAAyC;AAClE,OAAOC,eAAe,MAAM,4CAA4C;AACxE,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,EAAEC,MAAM,QAAQ,QAAQ;AACxC,MAAMC,OAAO,GAAGC,KAAK,IAAI;EACvB,MAAM;IACJC,SAAS;IACTC,MAAM;IACNC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC,IAAI;IACJC,OAAO,EAAEC,UAAU;IACnBC,QAAQ;IACRC;EACF,CAAC,GAAGV,KAAK;EACT,MAAMW,YAAY,GAAGb,MAAM,CAACO,QAAQ,CAAC;EACrC,MAAMO,SAAS,GAAGd,MAAM,CAACQ,IAAI,CAAC;EAC9B,MAAM;IACJJ,MAAM,EAAEW,UAAU;IAClBC,IAAI,EAAEC;EACR,CAAC,GAAGZ,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAG,CAAC,CAAC;EACtD,MAAMa,SAAS,GAAGd,MAAM,GAAGL,OAAO,CAACc,YAAY,CAAC,CAAC,CAAC,EAAEE,UAAU,CAAC,GAAGhB,OAAO,CAACc,YAAY,CAAC,CAAC,CAAC,EAAEI,QAAQ,CAAC;EACpG,MAAME,SAAS,GAAGf,MAAM,GAAGW,UAAU,GAAGE,QAAQ;EAChD,MAAMG,SAAS,GAAG,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGC,SAAS;EACvE,OAAO,aAAa3B,KAAK,CAAC6B,aAAa,CAACvB,OAAO,EAAE;IAC/CwB,GAAG,EAAE,MAAM;IACXC,KAAK,EAAEL;EACT,CAAC,EAAE,aAAa1B,KAAK,CAAC6B,aAAa,CAACxB,WAAW,EAAE;IAC/C2B,SAAS,EAAE5B,UAAU,CAAC,GAAGO,SAAS,OAAO,EAAE;MACzC,CAAC,GAAGA,SAAS,eAAe,GAAGC,MAAM;MACrC,CAAC,GAAGD,SAAS,iBAAiB,GAAGG;IACnC,CAAC,CAAC;IACFmB,OAAO,EAAEb,MAAM;IACf,YAAY,EAAEQ,SAAS;IACvBT,QAAQ,EAAEA;EACZ,CAAC,EAAEP,MAAM,GAAGL,OAAO,CAACe,SAAS,CAAC,CAAC,CAAC,EAAE,aAAatB,KAAK,CAAC6B,aAAa,CAAC5B,aAAa,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAGM,OAAO,CAACe,SAAS,CAAC,CAAC,CAAC,EAAEJ,UAAU,GAAG,aAAalB,KAAK,CAAC6B,aAAa,CAAC1B,eAAe,EAAE,IAAI,CAAC,GAAG,aAAaH,KAAK,CAAC6B,aAAa,CAAC3B,YAAY,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7P,CAAC;AACD,eAAeO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}